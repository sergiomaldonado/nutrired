"use strict";var precacheConfig=[["/index.html","d474f0b26ab061c76f18504aabc554f1"],["/static/css/main.4d8eb7fe.css","ea570dbd2e4258024504f11494868952"],["/static/media/bgPerfil.381de93d.png","381de93de53bfae4c4f321559b25bc0d"],["/static/media/ico-1.80d55fdb.svg","80d55fdb7c487eba8ab3a0a2756271b0"],["/static/media/ico-2.264c366f.svg","264c366fec970f3b28251d657fea90f2"],["/static/media/ico-3.6d4208c0.svg","6d4208c099d08a018c84095824f3f8fe"],["/static/media/ico-4.f7da9a94.svg","f7da9a945c1eba71f5734ae6d271cf6f"],["/static/media/ico-5.b9e9d589.svg","b9e9d5899e0810afcaac4c5ab2e36868"],["/static/media/ico-6.656eaeed.svg","656eaeedade1df172ed838e369f231b8"],["/static/media/ico-7.3c5b264f.svg","3c5b264f4cbfb0a78a9bc6dba4191c42"],["/static/media/ico-8.5adb781e.svg","5adb781e9539177e5f6c887699f64f38"],["/static/media/ico-9.7925e53c.svg","7925e53c2aa17729593c6aedaad2817c"],["/static/media/icoCena-activado.f0063c43.svg","f0063c438da60216915c517f5fa3e978"],["/static/media/icoCena.5dd0c539.svg","5dd0c539811954c190e0fa6238d65c92"],["/static/media/icoColacion-activado.3212d4cb.svg","3212d4cb9fecaaf5fc79147b0830c6dc"],["/static/media/icoColacion.23568a82.svg","23568a82f1de328eb5d1538591e7c332"],["/static/media/icoComida-activado.d83dfb87.svg","d83dfb87d7828c54db234973631e82f3"],["/static/media/icoComida.a48092d8.svg","a48092d8e123b6896307300d6cfaff56"],["/static/media/icoDesayuno-activado.237eb31e.svg","237eb31e8dfebddc6a9f83babc06d72e"],["/static/media/icoDesayuno.4ac5a766.svg","4ac5a76694bf23376cc196e3f6d83f2c"],["/static/media/logo.c0fa3714.svg","c0fa37146b6af973b3f004a26c0ce2f4"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(a){return a.redirected?("body"in a?Promise.resolve(a.body):a.blob()).then(function(e){return new Response(e,{headers:a.headers,status:a.status,statusText:a.statusText})}):Promise.resolve(a)},createCacheKey=function(e,a,t,c){var n=new URL(e);return c&&n.pathname.match(c)||(n.search+=(n.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),n.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(a){return t.every(function(e){return!e.test(a[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],c=new URL(a,self.location),n=createCacheKey(c,hashParamName,t,/\.\w{8}\./);return[c.toString(),n]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(c){return setOfCachedUrls(c).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var e=new Request(a,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+a+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return c.put(a,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(a){return a.keys().then(function(e){return Promise.all(e.map(function(e){if(!t.has(e.url))return a.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(a){if("GET"===a.request.method){var e,t=stripIgnoredUrlParameters(a.request.url,ignoreUrlParametersMatching),c="index.html";(e=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,c),e=urlsToCacheKeys.has(t));var n="/index.html";!e&&"navigate"===a.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],a.request.url)&&(t=new URL(n,self.location).toString(),e=urlsToCacheKeys.has(t)),e&&a.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',a.request.url,e),fetch(a.request)}))}});